//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClipboardMonitorLite.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ClipboardMonitorLite.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application is still running, if you&apos;d like to terminate it, right click and choose Exit..
        /// </summary>
        internal static string AppStillRunning {
            get {
                return ResourceManager.GetString("AppStillRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An item has been copied to the clipboard!.
        /// </summary>
        internal static string CopyNotification {
            get {
                return ResourceManager.GetString("CopyNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon icon_dark {
            get {
                object obj = ResourceManager.GetObject("icon_dark", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon icon_white {
            get {
                object obj = ResourceManager.GetObject("icon_white", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are about to enable notifications for every time you copy something. This will send a windows notification to your system even when the application is running in the background. Are you sure you want to enable this?.
        /// </summary>
        internal static string NotificationEnableText {
            get {
                return ResourceManager.GetString("NotificationEnableText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App still running.
        /// </summary>
        internal static string Title_AppStillRunning {
            get {
                return ResourceManager.GetString("Title_AppStillRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item copied!.
        /// </summary>
        internal static string Title_CopyNotification {
            get {
                return ResourceManager.GetString("Title_CopyNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable copy notifications.
        /// </summary>
        internal static string Title_NotificationEnableText {
            get {
                return ResourceManager.GetString("Title_NotificationEnableText", resourceCulture);
            }
        }
    }
}
